import 'package:flutter/material.dart';

/// –≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∞–≤–∞—Ç–∞—Ä–∞ –∏ –∑–∞–º–µ—Ç–∫–∏ '–û —Å–µ–±–µ' –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class AvatarBioOnboardingScreen extends StatefulWidget {
  final void Function(String avatar, String bio) onComplete;
  const AvatarBioOnboardingScreen({super.key, required this.onComplete});

  @override
  State<AvatarBioOnboardingScreen> createState() => _AvatarBioOnboardingScreenState();
}

class _AvatarBioOnboardingScreenState extends State<AvatarBioOnboardingScreen> {
  // –°–ø–∏—Å–æ–∫ –∞–≤–∞—Ç–∞—Ä–æ–≤ (–ø—É—Ç–∏ –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º asset-–∫–∞—Ä—Ç–∏–Ω–∫–∞–º –∏–ª–∏ emoji)
  static const List<String> avatars = [
    'üë¶', 'üëß', 'üßë', 'üë®‚Äçü¶∞', 'üë©‚Äçü¶∞', 'üë®‚Äçü¶±', 'üë©‚Äçü¶±', 'üë®‚Äçü¶≥', 'üë©‚Äçü¶≥', 'üßî', 'üë±‚Äç‚ôÇÔ∏è', 'üë±‚Äç‚ôÄÔ∏è', 'üßë‚Äçüé§', 'üßë‚Äçüè´', 'üßë‚Äçüíª', 'üßë‚Äçüî¨', 'üßë‚ÄçüöÄ', 'üßë‚Äçüé®', 'üèÉ‚Äç‚ôÇÔ∏è', 'üèÉ‚Äç‚ôÄÔ∏è', 'üö¥‚Äç‚ôÇÔ∏è', 'üö¥‚Äç‚ôÄÔ∏è', 'üèä‚Äç‚ôÇÔ∏è', 'üèä‚Äç‚ôÄÔ∏è'
  ];

  String? _selectedAvatar;
  final TextEditingController _bioController = TextEditingController();

  void _submit() {
    if (_selectedAvatar == null) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä.')),
      );
      return;
    }
    widget.onComplete(_selectedAvatar!, _bioController.text.trim());
  }

  @override
  void dispose() {
    _bioController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('–í–∞—à –∞–≤–∞—Ç–∞—Ä –∏ –æ —Å–µ–±–µ')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text('–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤–∞—Ç–∞—Ä:', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            const SizedBox(height: 12),
            SizedBox(
              height: 64,
              child: ListView.separated(
                scrollDirection: Axis.horizontal,
                itemCount: avatars.length,
                separatorBuilder: (_, __) => const SizedBox(width: 12),
                itemBuilder: (context, index) {
                  final avatar = avatars[index];
                  final selected = _selectedAvatar == avatar;
                  return GestureDetector(
                    onTap: () => setState(() => _selectedAvatar = avatar),
                    child: CircleAvatar(
                      radius: selected ? 32 : 28,
                      backgroundColor: selected ? Colors.blueAccent : Colors.grey[300],
                      child: Text(
                        avatar,
                        style: TextStyle(fontSize: 32, color: selected ? Colors.white : Colors.black),
                      ),
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 24),
            const Text('–û —Å–µ–±–µ:', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            const SizedBox(height: 8),
            TextField(
              controller: _bioController,
              maxLines: 3,
              maxLength: 120,
              decoration: const InputDecoration(
                border: OutlineInputBorder(),
                hintText: '–ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ...'
              ),
            ),
            const Spacer(),
            SizedBox(
              width: double.infinity,
              child: ElevatedButton(
                onPressed: _submit,
                child: const Text('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'),
              ),
            ),
          ],
        ),
      ),
    );
  }
} 